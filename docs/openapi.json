{"info": {"description": "Edge API", "title": "EasyVizAR Edge API", "version": "0.1"}, "paths": {"/headsets": {"get": {"description": "List headsets", "tags": ["headsets"], "parameters": [{"name": "envelope", "in": "query", "required": false, "description": "If set, the returned list will be wrapped in an envelope with this name."}], "responses": {"200": {"description": "A list of headsets.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Headset"}}}}}}}, "post": {"description": "Register a headset", "tags": ["headsets"], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Headset"}}}}, "responses": {"200": {"description": "A headset", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Headset"}}}}}}}, "/headsets/authenticate/": {"post": {"description": "Authenticate a headset", "tags": ["headsets"], "responses": {"200": {"description": "Authentication response"}}}}, "/headsets/{headsetId}/updates": {"get": {"description": "Get headset updates. The optional \"after\" and \"wait\" query parameters make it possible for the caller to wait for the next update or time out with no results.", "tags": ["headsets"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Headset ID"}, {"name": "after", "in": "query", "required": false, "description": "Limit results to updates after the given timestamp."}, {"name": "envelope", "in": "query", "required": false, "description": "If set, the returned list will be wrapped in an envelope with this name."}, {"name": "wait", "in": "query", "required": false, "description": "Maximum time (seconds) to wait for the next update. If set, and if there are no results immediately available, the server will wait for the next update or return no results after a timeout."}], "responses": {"200": {"description": "A list of headset updates.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/HeadsetUpdate"}}}}}, "204": {"description": "A waiting request timed out without any results."}}}, "post": {"description": "Create a new headset update", "tags": ["headsets"], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HeadsetUpdate"}}}}, "responses": {"200": {"description": "A headset update object", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HeadsetUpdate"}}}}}}}, "/headsets/{headsetId}": {"put": {"description": "Update a headset", "tags": ["headsets"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Headset ID"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Headset"}}}}, "responses": {"200": {"description": "New headset object", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Headset"}}}}}}}, "/headsets/{headset_id}": {"delete": {"description": "Delete a headset", "tags": ["headsets"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Headset ID"}], "responses": {"200": {"description": "Headset deleted"}}}}, "/maps": {"get": {"description": "List maps", "tags": ["maps"], "parameters": [{"name": "envelope", "in": "query", "required": false, "description": "If set, the returned list will be wrapped in an envelope with this name."}], "responses": {"200": {"description": "A list of Map objects.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Map"}}}}}}}, "post": {"description": "Create a map", "tags": ["maps"], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Map"}}}}, "responses": {"201": {"description": "Map created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Map"}}}}}}}, "/maps/{map_id}": {"get": {"description": "Get map", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "responses": {"200": {"description": "A Map object", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Headset"}}}}}}, "put": {"description": "Replace a map", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Map"}}}}, "responses": {"200": {"description": "Map replaced", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Map"}}}}, "201": {"description": "Map created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Map"}}}}}}, "delete": {"description": "Delete a map", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "responses": {"200": {"description": "Map deleted"}}}}, "/maps/{map_id}/features": {"get": {"description": "List map features", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}, {"name": "envelope", "in": "query", "required": false, "description": "If set, the returned list will be wrapped in an envelope with this name."}], "responses": {"200": {"description": "A list of MapFeature objects", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/MapFeature"}}}}}}}, "post": {"description": "Add a map feature", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MapFeature"}}}}, "responses": {"201": {"description": "MapFeature object", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MapFeature"}}}}}}}, "/maps/{map_id}/surfaces": {"get": {"description": "List surfaces", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "responses": {"200": {"description": "A list of surfaces.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/SurfaceFileInformation"}}}}}}}}, "/maps/{map_id}/surfaces/{surface_id}": {"put": {"summary": "Update map surface", "description": "Create or update a surface, which should be a triangle mesh in PLY file format", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "requestBody": {"required": true, "content": {"application/ply": {}}}, "responses": {"200": {"description": "A surface file information object", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SurfaceFileInformation"}}}}}}}, "/maps/{map_id}/qrcode": {"get": {"description": "Get a QR code for the map.", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "responses": {"200": {"description": "An SVG image file.", "content": {"image/svg+xml": {}}}}}}, "/maps/{map_id}/top-down.svg": {"get": {"description": "Get a top-down floor plan image.", "tags": ["maps"], "parameters": [{"name": "id", "in": "path", "required": true, "description": "Map ID"}], "responses": {"200": {"description": "An SVG image file.", "content": {"image/svg+xml": {}}}}}}}, "tags": [{"name": "headsets", "description": "Operations on Headset objects"}, {"name": "maps", "description": "Operations on Map objects"}], "openapi": "3.0", "components": {"schemas": {"Vector": {"type": "object", "properties": {"z": {"type": "number"}, "x": {"type": "number"}, "y": {"type": "number"}}, "required": ["x", "y", "z"]}, "Headset": {"type": "object", "properties": {"position": {"$ref": "#/components/schemas/Vector"}, "id": {"type": "string"}, "lastUpdate": {"type": "string", "format": "date-time"}, "name": {"type": "string"}, "mapID": {"type": "string"}, "orientation": {"$ref": "#/components/schemas/Vector"}}}, "HeadsetUpdate": {"type": "object", "properties": {"orientation": {"$ref": "#/components/schemas/Vector"}, "position": {"$ref": "#/components/schemas/Vector"}, "mapID": {"type": "string"}, "headsetID": {"type": "string"}}}, "Map": {"type": "object", "properties": {"name": {"type": "string"}, "id": {"type": "string"}, "image": {"type": "string"}}}, "MapFeatureStyle": {"type": "object", "properties": {"topOffset": {"type": "number"}, "placement": {"type": "string"}, "leftOffset": {"type": "number"}, "icon": {"type": "string"}}}, "MapFeature": {"type": "object", "properties": {"position": {"$ref": "#/components/schemas/Vector"}, "id": {"type": "string"}, "style": {"$ref": "#/components/schemas/MapFeatureStyle"}, "name": {"type": "string"}, "mapID": {"type": "string"}}}, "ImageUpload": {"type": "object", "properties": {"id": {"type": "string"}, "url": {"type": "string"}, "intent": {"type": "string"}, "type": {"type": "string"}, "data": {"type": "object"}}}, "SurfaceFileInformation": {"type": "object", "properties": {"size": {"type": "integer"}, "id": {"type": "string"}, "modified": {"type": "number"}, "filename": {"type": "string"}}}}}}